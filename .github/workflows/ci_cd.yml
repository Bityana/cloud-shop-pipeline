name: CI & CD

on:
  # One push block: CI on main branch, CD on v* tags
  push:
    branches: [ main ]
    tags:     [ 'v*' ]   # v1.2.3, v0.9.0-beta, etc.

jobs:
  # ────────────────────────────── CI  ──────────────────────────────
  build-test:
    # Run only when we push to main (not on tags)
    if: startsWith(github.ref, 'refs/heads/main')
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      # -------- Backend (Python) --------
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install backend dependencies
        run: |
          cd backend
          pip install -r requirements.txt
          pip install pytest

      - name: Run backend tests
        run: |
          cd backend
          pytest -q

      # -------- Frontend (Node) --------
      - name: Set up Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install frontend dependencies
        run: |
          cd frontend
          npm ci

      - name: Lint frontend
        run: |
          cd frontend
          npm run lint

  # ───────────────────────────── CD  ───────────────────────────────
  release:
    # Run only when the ref is a tag beginning with v
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    env:
      AWS_REGION:        ${{ secrets.AWS_REGION }}
      EKS_CLUSTER_NAME:  ${{ secrets.EKS_CLUSTER_NAME }}
      IMAGE_TAG:         ${{ github.ref_name }}   # e.g. v1.2.3

    steps:
      - uses: actions/checkout@v4

      # -------- AWS login --------
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id:     ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region:            ${{ env.AWS_REGION }}

      - name: Log in to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      # -------- Docker buildx --------
      - uses: docker/setup-qemu-action@v3
      - uses: docker/setup-buildx-action@v3

      # -------- Build & push backend --------
      - name: Build & push backend image
        uses: docker/build-push-action@v5
        with:
          context: ./backend
          push: true
          tags: |
            ${{ steps.login-ecr.outputs.registry }}/backend:${{ env.IMAGE_TAG }}

      # -------- Build & push frontend --------
      - name: Build & push frontend image
        uses: docker/build-push-action@v5
        with:
          context: ./frontend
          push: true
          tags: |
            ${{ steps.login-ecr.outputs.registry }}/frontend:${{ env.IMAGE_TAG }}

      # -------- Deploy to EKS --------
      - name: Update kubeconfig
        run: |
          aws eks update-kubeconfig \
            --name ${EKS_CLUSTER_NAME} \
            --region ${AWS_REGION}

      - name: Update backend Deployment image
        run: |
          kubectl set image deployment/backend \
            backend=${{ steps.login-ecr.outputs.registry }}/backend:${IMAGE_TAG}

      - name: Update frontend Deployment image
        run: |
          kubectl set image deployment/frontend \
            frontend=${{ steps.login-ecr.outputs.registry }}/frontend:${IMAGE_TAG}
