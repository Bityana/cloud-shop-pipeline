name: CI & CD

on:
  push:
    branches: [ main ]
  # any tag that starts with v (v1.2.3, v0.9.0-beta, …)
  release:
    types: [created]
  push:
    tags:
      - 'v*'

jobs:
  # ───────────────────────── CI (main branch) ──────────────────────────
  build-test:
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      # ---------- Backend ----------
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install backend deps
        run: |
          cd backend
          python -m pip install -r requirements.txt
      - name: Run backend tests
        run: |
          cd backend
          pytest

      # ---------- Frontend ----------
      - name: Set up Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install frontend deps
        run: |
          cd frontend
          npm ci
      - name: Lint frontend
        run: |
          cd frontend
          npm run lint

  # ──────────────────────── CD (tag v*) ────────────────────────────────
  release:
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    env:
      AWS_REGION: ${{ secrets.AWS_REGION }}
      EKS_CLUSTER_NAME: ${{ secrets.EKS_CLUSTER_NAME }}
      IMAGE_TAG: ${{ github.ref_name }}   # v1.2.3
    steps:
      - uses: actions/checkout@v4

      # ---------- Set up Docker buildx ----------
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Buildx
        uses: docker/setup-buildx-action@v3

      # ---------- AWS login ----------
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id:     ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region:            ${{ env.AWS_REGION }}

      - name: Log in to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      # ---------- Build & Push backend ----------
      - name: Build & push backend image
        uses: docker/build-push-action@v5
        with:
          context: ./backend
          push: true
          tags: |
            ${{ steps.login-ecr.outputs.registry }}/backend:${{ env.IMAGE_TAG }}

      # ---------- Build & Push frontend ----------
      - name: Build & push frontend image
        uses: docker/build-push-action@v5
        with:
          context: ./frontend
          push: true
          tags: |
            ${{ steps.login-ecr.outputs.registry }}/frontend:${{ env.IMAGE_TAG }}

      # ---------- Deploy to EKS ----------
      - name: Set up kubectl
        run: |
          aws eks update-kubeconfig --name ${EKS_CLUSTER_NAME} --region ${AWS_REGION}

      - name: Update backend Deployment image
        run: |
          kubectl set image deployment/backend backend=${{ steps.login-ecr.outputs.registry }}/backend:${IMAGE_TAG}

      - name: Update frontend Deployment image
        run: |
          kubectl set image deployment/frontend frontend=${{ steps.login-ecr.outputs.registry }}/frontend:${IMAGE_TAG}
